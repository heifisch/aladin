<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE script:module PUBLIC "-//OpenOffice.org//DTD OfficeDocument 1.0//EN" "module.dtd">
<script:module xmlns:script="http://openoffice.org/2000/script" script:name="ReadInvoice" script:language="StarBasic" script:moduleType="normal">&apos; Erstellt von Heiko Fischer
&apos; heiko.fischer@aladin-gmbh.de - www.aladin-gmbh.de
&apos; Veröffentlicht unter GPL

REM  *****  BASIC  *****

Option Explicit

Global Const BILLING_REFERENCE_ID=0, BILLING_REFERENCE_ISSUE_DATE=1
Global Const CHARGE_INDICATOR=0, ALLOWANCE_CHARGE_REASON_CODE=1, ALLOWANCE_CHARGE_REASON=2
Global Const MULTIPLIER_FACTOR_NUMERIC=5, AMOUNT=6, BASE_AMOUNT=7
Global Const TAXABLE_AMOUNT=0, TAX_AMOUNT=1, TAX_EXEMPTION_REASON=2, TAX_CATEGORY_ID=3, TAX_PERCENT=4
Global Const INVOICE_LINE_LEVEL=0, INVOICE_LINE_ID=1, PARENT_INVOICE_LINE_ID=2
Global Const INVOICE_LINE_NOTE=5, INVOICED_QUANTITY=6, QUANTITY_UNIT_CODE=7
Global Const INVOICE_LINE_ITEM_NAME=8, INVOICE_LINE_ITEM_DESCRIPTION=9
Global Const INVOICE_LINE_ITEM_BUYERS_IDENTIFICATION_ID=10, INVOICE_LINE_ITEM_SELLER_IDENTIFICATION_ID=11
Global Const INVOICE_LINE_EXTENSION_AMOUNT=12, INVOICE_LINE_PRICE_AMOUNT=13

Type structInvoice
	sInvoiceID As String
	sIssueDate As String
	sDueDate As String
	sInvoiceTypCode As String
	sDocumentCurrencyCode As String
	sBuyerReference As String
	sSellerEMail As String
	sSellerName As String
	sSellerDescription As String
	sSellerStreetName As String
	sSellerCityName As String
	sSellerPLZ As String
	sSellerCountryCode As String
	sSellerTaxCompanyID As String
	sSellerContactName As String
	sSellerContactTelephone As String
	sSellerContactElectronicMail As String
	sActualDeliveryDate As String
	sPaymentMeansCode As String
	sPayeeFinancialAccountID As String
	sPayeeFinancialAccountName As String
	sPayeeFinancialInstitutionBranchID As String
	sPaymentTerms As String
	sTaxTotalAmount As String
	sLineExtensionAmount As String
	sTaxExclusiveAmount As String
	sTaxInclusiveAmount As String
	sAllowanceTotalAmount As String
	sChargeTotalAmount As String 
	sPrepaidAmount As String
	sPayableRoundingAmount As String
	sPayableAmount As String
End Type

Dim Invoice As New structInvoice
Dim arrInvoiceNote As Variant, arrBillingReference As Variant, arrAllowanceCharge As Variant, arrTaxSubtotal As Variant, arrInvoiceLines As Variant

Sub readInvoice
	Dim oDocBuilder, oDOM, sURL As String 
	Dim oFilePicker As Object, oSettings As Object, oFileAccess As Object
 
	oSettings = CreateUnoService(&quot;com.sun.star.util.PathSettings&quot;)
	sURL = oSettings.Work
 	oFilePicker = CreateUnoService(&quot;com.sun.star.ui.dialogs.FilePicker&quot;)
	oFilePicker.AppendFilter(&quot;XML-Dateien (*.xml)&quot;, &quot;*.xml&quot;)
	oFilePicker.SetCurrentFilter(&quot;XML-Dateien (*.xml)&quot;)
	oFilePicker.MultiSelectionMode=False
	
	oFileAccess = CreateUnoService(&quot;com.sun.star.ucb.SimpleFileAccess&quot;)
	If oFileAccess.exists(sURL) Then
		oFilePicker.setDisplayDirectory(sURL)
	End If

	If oFilePicker.execute() Then
		sURL=oFilePicker.Files(0)
	End If
    	
	oDocBuilder = CreateUnoService(&quot;com.sun.star.xml.dom.DocumentBuilder&quot;)
	oDOM = oDocBuilder.parseURI(ConvertFromURL(sURL))
	oDOM.normalize()

	If oDom.FirstChild.NodeName=&quot;Invoice&quot; Then
		readXRechnung(oDOM) 
	ElseIf oDom.FirstChild.NodeName=&quot;CrossIndustryInvoice&quot; Then
		readZUGFeRD(oDOM)
	End if
End Sub

Sub readXRechnung(oDOM As Object)
	Dim oElem As Object, oElemList As Object, oSubElemList As Object
	Dim a% , b% , c% , d% , e% , f% , g% , h% , i% , j% , k% , l%, x%
		
	oElemList=oDOM.getElementsByTagName(&quot;Invoice&quot;).item(0).getChildNodes()
	With Invoice
		For a = 0 To oElemList.getLength() - 1
				Select Case oElemList.item(a).NodeName
					Case &quot;ID&quot;
						.sInvoiceID=oElemList.item(a).FirstChild.NodeValue &apos;[BT-1]
					Case &quot;IssueDate&quot;
						.sIssueDate=oElemList.item(a).FirstChild.NodeValue &apos;[BT-2]
					Case &quot;DueDate&quot;
						.sDueDate=oElemList.item(a).FirstChild.NodeValue	&apos;[BT-9]
					Case &quot;InvoiceTypeCode&quot;
						.sInvoiceTypCode=oElemList.item(a).FirstChild.NodeValue &apos;[BT-3]
					Case &quot;Note&quot;
						ReDim Preserve arrInvoiceNote(b)
						arrInvoiceNote(b)=oElemList.item(a).FirstChild.NodeValue &apos;[BT-22]
						b=b+1
					Case &quot;DocumentCurrencyCode&quot;
						.sDocumentCurrencyCode=oElemList.item(a).FirstChild.NodeValue &apos;[BT-5]
					Case &quot;BuyerReference&quot;
						.sBuyerReference=oElemList.item(a).FirstChild.NodeValue &apos;[BT-10]
					Case &quot;BillingReference&quot; &apos;[BG-3]
						ReDim Preserve arrBillingReference(c,2)
						arrBillingReference(c,BILLING_REFERENCE_ID)=getValue(oElemList.item(a),Array(&quot;ID&quot;)) &apos;[BT-25]
						arrBillingReference(c,BILLING_REFERENCE_ISSUE_DATE)=getValue(oElemList.item(a),Array(&quot;IssueDate&quot;)) &apos;[BT-26]
						c=c+1
					Case &quot;AccountingSupplierParty&quot;
						.sSellerEMail=getValue(oElemList.item(a),Array(&quot;Party&quot;,&quot;EndpointID&quot;),&quot;schemeID&quot;,&quot;EM&quot;) &apos;[BT-34]
						.sSellerName=getValue(oElemList.item(a),Array(&quot;Party&quot;,&quot;PartyName&quot;,&quot;Name&quot;)) &apos;[BT-28]
						.sSellerStreetName=getValue(oElemList.item(a),Array(&quot;Party&quot;,&quot;PostalAddress&quot;,&quot;StreetName&quot;)) &apos;[BT-35]
						.sSellerCityName=getValue(oElemList.item(a),Array(&quot;Party&quot;,&quot;PostalAddress&quot;,&quot;CityName&quot;)) &apos;[BT-37]
						.sSellerPLZ=getValue(oElemList.item(a),Array(&quot;Party&quot;,&quot;PostalAddress&quot;,&quot;PostalZone&quot;)) &apos;[BT-38]
						.sSellerCountryCode=getValue(oElemList.item(a),Array(&quot;Party&quot;,&quot;PostalAddress&quot;,&quot;Country&quot;,&quot;IdentificationCode&quot;)) &apos;[BT-40]
						.sSellerTaxCompanyID=getValue(oElemList.item(a),Array(&quot;Party&quot;,&quot;PartyTaxScheme&quot;,&quot;CompanyID&quot;)) &apos;[BT-31] [BT-32]
						.sSellerContactName=getValue(oElemList.item(a),Array(&quot;Party&quot;,&quot;Contact&quot;,&quot;Name&quot;)) &apos;[BT-41]
						.sSellerContactTelephone=getValue(oElemList.item(a),Array(&quot;Party&quot;,&quot;Contact&quot;,&quot;Telephone&quot;)) &apos;[BT-42]
						.sSellerContactElectronicMail=getValue(oElemList.item(a),Array(&quot;Party&quot;,&quot;Contact&quot;,&quot;ElectronicMail&quot;)) &apos;[BT-43]
					Case &quot;Delivery&quot;
						.sActualDeliveryDate=getValue(oElemList.item(a),Array(&quot;ActualDeliveryDate&quot;)) &apos;[BT-72]
					Case &quot;PaymentMeans&quot;
						.sPaymentMeansCode=getValue(oElemList.item(a),Array(&quot;PaymentMeansCode&quot;)) &apos;[BT-81]
						.sPayeeFinancialAccountID=getValue(oElemList.item(a),Array(&quot;PayeeFinancialAccount&quot;,&quot;ID&quot;)) &apos;[BT-84]
						.sPayeeFinancialAccountName=getValue(oElemList.item(a),Array(&quot;PayeeFinancialAccount&quot;,&quot;Name&quot;)) &apos;[BT-85]
						.sPayeeFinancialInstitutionBranchID=getValue(oElemList.item(a),Array(&quot;PayeeFinancialAccount&quot;,&quot;FinancialInstitutionBranch&quot;,&quot;ID&quot;)) &apos;[BT-86]
					Case &quot;PaymentTerms&quot;
						.sPaymentTerms=getValue(oElemList.item(a),Array(&quot;Note&quot;)) &apos;[BT-20]
					Case &quot;AllowanceCharge&quot;
						ReDim Preserve arrAllowanceCharge(d,8)
						arrAllowanceCharge(d,CHARGE_INDICATOR)=getValue(oElemList.item(a),Array(&quot;ChargeIndicator&quot;)) &apos;[Use “true” when informing about Charges and “false” when informing about Allowances.]
						arrAllowanceCharge(d,ALLOWANCE_CHARGE_REASON_CODE)=getValue(oElemList.item(a),Array(&quot;AllowanceChargeReasonCode&quot;)) &apos;[BT-98] [BT-105]
						arrAllowanceCharge(d,ALLOWANCE_CHARGE_REASON)=getValue(oElemList.item(a),Array(&quot;AllowanceChargeReason&quot;)) &apos;[BT-97] [BT-104]
						arrAllowanceCharge(d,MULTIPLIER_FACTOR_NUMERIC)=getValue(oElemList.item(a),Array(&quot;MultiplierFactorNumeric&quot;)) &apos;[BT-94] [BT-101]
						arrAllowanceCharge(d,AMOUNT)=getValue(oElemList.item(a),Array(&quot;Amount&quot;)) &apos;[BT-92] [BT-99]
						arrAllowanceCharge(d,BASE_AMOUNT)=getValue(oElemList.item(a),Array(&quot;BaseAmount&quot;)) &apos;[BT-93] [BT-100]
						arrAllowanceCharge(d,TAX_CATEGORY_ID)=getValue(oElemList.item(a),Array(&quot;TaxCategory&quot;,&quot;ID&quot;)) &apos;[BT-95] [BT-102]
						arrAllowanceCharge(d,TAX_PERCENT)=getValue(oElemList.item(a),Array(&quot;TaxCategory&quot;,&quot;Percent&quot;)) &apos;[BT-96] [BT-103]
						d=d+1
					Case &quot;TaxTotal&quot;
						.sTaxTotalAmount=getValue(oElemList.item(a),Array(&quot;TaxAmount&quot;)) &apos;[BT-110] [BT-111]
						oSubElemList=oElemList.item(a).getElementsByTagName(&quot;TaxSubtotal&quot;)
						For e = 0 To oSubElemList.getLength() - 1
							ReDim Preserve arrTaxSubtotal(e,5)
							arrTaxSubtotal(e,TAXABLE_AMOUNT)=getValue(oSubElemList.item(e),Array(&quot;TaxableAmount&quot;)) &apos;[BT-116]
							arrTaxSubtotal(e,TAX_AMOUNT)=getValue(oSubElemList.item(e),Array(&quot;TaxAmount&quot;)) &apos;[BT-117]
							arrTaxSubtotal(e,TAX_CATEGORY_ID)=getValue(oSubElemList.item(e),Array(&quot;TaxCategory&quot;,&quot;ID&quot;)) &apos;[BT-118]
							arrTaxSubtotal(e,TAX_PERCENT)=getValue(oSubElemList.item(e),Array(&quot;TaxCategory&quot;,&quot;Percent&quot;)) &apos;[BT-119]
							arrTaxSubtotal(e,TAX_EXEMPTION_REASON)=getValue(oSubElemList.item(e),Array(&quot;TaxCategory&quot;,&quot;TaxExemptionReason&quot;)) &apos;[BT-120]
						Next
					Case &quot;LegalMonetaryTotal&quot;
						.sLineExtensionAmount=getValue(oElemList.item(a),Array(&quot;LineExtensionAmount&quot;)) &apos;[BT-106]
						.sTaxExclusiveAmount=getValue(oElemList.item(a),Array(&quot;TaxExclusiveAmount&quot;)) &apos;[BT-109]
						.sTaxInclusiveAmount=getValue(oElemList.item(a),Array(&quot;TaxInclusiveAmount&quot;)) &apos;[BT-112]
						.sAllowanceTotalAmount=getValue(oElemList.item(a),Array(&quot;AllowanceTotalAmount&quot;)) &apos;[BT-107]
						.sChargeTotalAmount=getValue(oElemList.item(a),Array(&quot;ChargeTotalAmount&quot;)) &apos;[BT-108]
						.sPrepaidAmount=getValue(oElemList.item(a),Array(&quot;PrepaidAmount&quot;)) &apos;[BT-113]
						.sPayableRoundingAmount=getValue(oElemList.item(a),Array(&quot;PayableRoundingAmount&quot;)) &apos;[BT-114]
						.sPayableAmount=getValue(oElemList.item(a),Array(&quot;PayableAmount&quot;)) &apos;[BT-115]
					Case &quot;InvoiceLine&quot;
						arrInvoiceLines=getInvoiceLines(oElemList.item(a),arrInvoiceLines)
				End Select
		Next
	End With
	CreateSheet
&apos;	PrintValues
End Sub

Sub readZUGFeRD(oDOM As Object)
	Dim oElem As Object, oElemList As Object, oSubElemList As Object, oSubSubElemList As Object
	Dim a% , b% , c% , d% , e% , f% , g% , h% , i% , j% , k% , l%, x%
		
	oElemList=oDOM.getElementsByTagName(&quot;CrossIndustryInvoice&quot;).item(0).getChildNodes()
	With Invoice
		For a = 0 To oElemList.getLength() - 1
			Select Case oElemList.item(a).NodeName
				Case &quot;ExchangedDocument&quot;
					.sInvoiceID=getValue(oElemList.item(a),Array(&quot;ID&quot;)) &apos;[BT-1]
					.sIssueDate=getValue(oElemList.item(a),Array(&quot;IssueDateTime&quot;,&quot;DateTimeString&quot;)) &apos;[BT-2]
					.sInvoiceTypCode=getValue(oElemList.item(a),Array(&quot;TypeCode&quot;)) &apos;[BT-3]
					oSubElemList=oElemList.item(a).getElementsByTagName(&quot;IncludedNote&quot;)
					For i = 0 To oSubElemList.getLength() - 1
						ReDim Preserve arrInvoiceNote(i)
						arrInvoiceNote(i)=getValue(oSubElemList.item(i),Array(&quot;Content&quot;)) &apos;[BT-22]
					Next
				Case &quot;SupplyChainTradeTransaction&quot;
					oSubElemList=oElemList.item(a).getChildNodes()
					For b = 0 To oSubElemList.getLength() - 1
						Select Case oSubElemList.item(b).NodeName
							Case &quot;IncludedSupplyChainTradeLineItem&quot;
								ReDim Preserve arrInvoiceLines(b,13)
								arrInvoiceLines(b,INVOICE_LINE_ID)=getValue(oSubElemList.item(b),Array(&quot;AssociatedDocumentLineDocument&quot;,&quot;LineID&quot;)) &apos;[BT-126]
								arrInvoiceLines(b,PARENT_INVOICE_LINE_ID)=getValue(oSubElemList.item(b),Array(&quot;AssociatedDocumentLineDocument&quot;,&quot;ParentLineID&quot;)) &apos;[BT-X-304]
								arrInvoiceLines(b,INVOICE_LINE_NOTE)=getValue(oSubElemList.item(b),Array(&quot;AssociatedDocumentLineDocument&quot;,&quot;IncludedNote&quot;)) &apos;[BT-127]
								arrInvoiceLines(b,INVOICE_LINE_ITEM_BUYERS_IDENTIFICATION_ID)=getValue(oSubElemList.item(b),Array(&quot;SpecifiedTradeProduct&quot;,&quot;BuyerAssignedID&quot;)) &apos;[BT-156]
								arrInvoiceLines(b,INVOICE_LINE_ITEM_SELLER_IDENTIFICATION_ID)=getValue(oSubElemList.item(b),Array(&quot;SpecifiedTradeProduct&quot;,&quot;SellerAssignedID&quot;)) &apos;[BT-155]
								arrInvoiceLines(b,INVOICE_LINE_ITEM_NAME)=getValue(oSubElemList.item(b),Array(&quot;SpecifiedTradeProduct&quot;,&quot;Name&quot;)) &apos;[BT-153]
								arrInvoiceLines(b,INVOICE_LINE_ITEM_DESCRIPTION)=getValue(oSubElemList.item(b),Array(&quot;SpecifiedTradeProduct&quot;,&quot;Description&quot;)) &apos;[BT-154]
								arrInvoiceLines(b,INVOICE_LINE_PRICE_AMOUNT)=getValue(oSubElemList.item(b),Array(&quot;SpecifiedLineTradeAgreement&quot;,&quot;NetPriceProductTradePrice&quot;,&quot;ChargeAmount&quot;)) &apos;[BT-146]
								arrInvoiceLines(b,INVOICED_QUANTITY)=getValue(oSubElemList.item(b),Array(&quot;SpecifiedLineTradeDelivery&quot;,&quot;BilledQuantity&quot;)) &apos;[BT-129]
								arrInvoiceLines(b,QUANTITY_UNIT_CODE)=getValue(oSubElemList.item(b),Array(&quot;SpecifiedLineTradeDelivery&quot;,&quot;BilledQuantity&quot;),&quot;unitCode&quot;,&quot;&quot;,True) &apos;[BT-130]
								arrInvoiceLines(b,TAX_CATEGORY_ID)=getValue(oSubElemList.item(b),Array(&quot;SpecifiedLineTradeSettlement&quot;,&quot;ApplicableTradeTax&quot;,&quot;CategoryCode&quot;)) &apos;[BT-151]
								arrInvoiceLines(b,TAX_PERCENT)=getValue(oSubElemList.item(b),Array(&quot;SpecifiedLineTradeSettlement&quot;,&quot;ApplicableTradeTax&quot;,&quot;RateApplicablePercent&quot;)) &apos;[BT-152]
								arrInvoiceLines(b,INVOICE_LINE_EXTENSION_AMOUNT)=getValue(oSubElemList.item(b),Array(&quot;SpecifiedLineTradeSettlement&quot;,&quot;SpecifiedTradeSettlementLineMonetarySummation&quot;,&quot;LineTotalAmount&quot;)) &apos;[BT-131]
							Case &quot;ApplicableHeaderTradeAgreement&quot;
								.sBuyerReference=getValue(oSubElemList.item(b),Array(&quot;BuyerReference&quot;)) &apos;[BT-10]
								.sSellerName=getValue(oSubElemList.item(b),Array(&quot;SellerTradeParty&quot;,&quot;Name&quot;)) &apos;[BT-27]
								.sSellerDescription=getValue(oSubElemList.item(b),Array(&quot;SellerTradeParty&quot;,&quot;Description&quot;)) &apos;[BT-33]
								.sSellerPLZ=getValue(oSubElemList.item(b),Array(&quot;SellerTradeParty&quot;,&quot;PostalTradeAddress&quot;,&quot;PostcodeCode&quot;)) &apos;[BT-38]
								.sSellerStreetName=getValue(oSubElemList.item(b),Array(&quot;SellerTradeParty&quot;,&quot;PostalTradeAddress&quot;,&quot;LineOne&quot;)) &apos;[BT-35]
								.sSellerCityName=getValue(oSubElemList.item(b),Array(&quot;SellerTradeParty&quot;,&quot;PostalTradeAddress&quot;,&quot;CityName&quot;)) &apos;[BT-37]
								.sSellerCountryCode=getValue(oSubElemList.item(b),Array(&quot;SellerTradeParty&quot;,&quot;PostalTradeAddress&quot;,&quot;CountryID&quot;)) &apos;[BT-40]
								.sSellerEMail=getValue(oSubElemList.item(b),Array(&quot;SellerTradeParty&quot;,&quot;URIUniversalCommunication&quot;,&quot;URIID&quot;),&quot;schemeID&quot;,&quot;EM&quot;) &apos;[BT-34]
								.sSellerTaxCompanyID=getValue(oSubElemList.item(b),Array(&quot;SellerTradeParty&quot;,&quot;SpecifiedTaxRegistration&quot;,&quot;ID&quot;)) &apos;[BT-31] [BT-32]
								.sSellerContactName=getValue(oSubElemList.item(b),Array(&quot;SellerTradeParty&quot;,&quot;DefinedTradeContact&quot;,&quot;PersonName&quot;)) &apos;[BT-41]
								.sSellerContactTelephone=getValue(oSubElemList.item(b),Array(&quot;SellerTradeParty&quot;,&quot;DefinedTradeContact&quot;,&quot;TelephoneUniversalCommunication&quot;,&quot;CompleteNumber&quot;)) &apos;[BT-42]
								.sSellerContactElectronicMail=getValue(oSubElemList.item(b),Array(&quot;SellerTradeParty&quot;,&quot;DefinedTradeContact&quot;,&quot;EmailURIUniversalCommunication&quot;,&quot;URIID&quot;)) &apos;[BT-43]
							Case &quot;ApplicableHeaderTradeDelivery&quot;
								.sActualDeliveryDate=getValue(oSubElemList.item(b),Array(&quot;ActualDeliverySupplyChainEvent&quot;,&quot;OccurrenceDateTime&quot;,&quot;DateTimeString&quot;)) &apos;[BT-72]
							Case &quot;ApplicableHeaderTradeSettlement&quot;
								.sDocumentCurrencyCode=getValue(oSubElemList.item(b),Array(&quot;InvoiceCurrencyCode&quot;)) &apos;[BT-5]
								.sPaymentMeansCode=getValue(oSubElemList.item(b),Array(&quot;SpecifiedTradeSettlementPaymentMeans&quot;,&quot;TypeCode&quot;)) &apos;[BT-81]
								.sPayeeFinancialAccountID=getValue(oSubElemList.item(b),Array(&quot;SpecifiedTradeSettlementPaymentMeans&quot;,&quot;PayeePartyCreditorFinancialAccount&quot;,&quot;IBANID&quot;)) &apos;[BT-84]
								.sPayeeFinancialAccountName=getValue(oSubElemList.item(b),Array(&quot;SpecifiedTradeSettlementPaymentMeans&quot;,&quot;PayeePartyCreditorFinancialAccount&quot;,&quot;AccountName&quot;)) &apos;[BT-85]
								.sPayeeFinancialInstitutionBranchID=getValue(oSubElemList.item(b),Array(&quot;SpecifiedTradeSettlementPaymentMeans&quot;,&quot;PayeeSpecifiedCreditorFinancialInstitution&quot;,&quot;BICID&quot;)) &apos;[BT-86]
								oSubSubElemList=oSubElemList.item(b).getElementsByTagName(&quot;ApplicableTradeTax&quot;)
								For c = 0 To oSubSubElemList.getLength() - 1
									ReDim Preserve arrTaxSubtotal(c,5)
									arrTaxSubtotal(c,TAX_AMOUNT)=getValue(oSubSubElemList.item(c),Array(&quot;CalculatedAmount&quot;)) &apos;[BT-117]
									arrTaxSubtotal(c,TAX_EXEMPTION_REASON)=getValue(oSubSubElemList.item(c),Array(&quot;ExemptionReason&quot;)) &apos;[BT-120]
									arrTaxSubtotal(c,TAXABLE_AMOUNT)=getValue(oSubSubElemList.item(c),Array(&quot;BasisAmount&quot;)) &apos;[BT-116]
									arrTaxSubtotal(c,TAX_CATEGORY_ID)=getValue(oSubSubElemList.item(c),Array(&quot;CategoryCode&quot;)) &apos;[BT-118]
									arrTaxSubtotal(c,TAX_PERCENT)=getValue(oSubSubElemList.item(c),Array(&quot;RateApplicablePercent&quot;)) &apos;[BT-119]
								Next
								oSubSubElemList=oSubElemList.item(b).getElementsByTagName(&quot;SpecifiedTradeAllowanceCharge&quot;)
								For d = 0 To oSubSubElemList.getLength() - 1
									ReDim Preserve arrAllowanceCharge(d,8)
									arrAllowanceCharge(d,CHARGE_INDICATOR)=getValue(oSubSubElemList.item(d),Array(&quot;ChargeIndicator&quot;,&quot;Indicator&quot;)) &apos;[Use “true” when informing about Charges and “false” when informing about Allowances.]
									arrAllowanceCharge(d,ALLOWANCE_CHARGE_REASON_CODE)=getValue(oSubSubElemList.item(d),Array(&quot;ReasonCode&quot;)) &apos;[BT-98] [BT-105]
									arrAllowanceCharge(d,ALLOWANCE_CHARGE_REASON)=getValue(oSubSubElemList.item(d),Array(&quot;Reason&quot;)) &apos;[BT-97] [BT-104]
									arrAllowanceCharge(d,MULTIPLIER_FACTOR_NUMERIC)=getValue(oSubSubElemList.item(d),Array(&quot;CalculationPercent&quot;)) &apos;[BT-94] [BT-101]
									arrAllowanceCharge(d,AMOUNT)=getValue(oSubSubElemList.item(d),Array(&quot;ActualAmount&quot;)) &apos;[BT-92] [BT-99]
									arrAllowanceCharge(d,BASE_AMOUNT)=getValue(oSubSubElemList.item(d),Array(&quot;BasisAmount&quot;)) &apos;[BT-93] [BT-100]
									arrAllowanceCharge(d,TAX_CATEGORY_ID)=getValue(oSubSubElemList.item(d),Array(&quot;CategoryTradeTax&quot;,&quot;CategoryCode&quot;)) &apos;[BT-95] [BT-102]
									arrAllowanceCharge(d,TAX_PERCENT)=getValue(oSubSubElemList.item(d),Array(&quot;CategoryTradeTax&quot;,&quot;RateApplicablePercent&quot;)) &apos;[BT-96] [BT-103]
								Next
								.sPaymentTerms=getValue(oSubElemList.item(b),Array(&quot;SpecifiedTradePaymentTerms&quot;,&quot;Description&quot;)) &apos;[BT-20]
								.sDueDate=getValue(oSubElemList.item(b),Array(&quot;SpecifiedTradePaymentTerms&quot;,&quot;DueDateDateTime&quot;,&quot;DateTimeString&quot;)) &apos;[BT-9]
								.sLineExtensionAmount=getValue(oSubElemList.item(b),Array(&quot;SpecifiedTradeSettlementHeaderMonetarySummation&quot;,&quot;LineTotalAmount&quot;)) &apos;[BT-106]
								.sChargeTotalAmount=getValue(oSubElemList.item(b),Array(&quot;SpecifiedTradeSettlementHeaderMonetarySummation&quot;,&quot;ChargeTotalAmount&quot;)) &apos;[BT-108]
								.sAllowanceTotalAmount=getValue(oSubElemList.item(b),Array(&quot;SpecifiedTradeSettlementHeaderMonetarySummation&quot;,&quot;AllowanceTotalAmount&quot;)) &apos;[BT-107]
								.sTaxExclusiveAmount=getValue(oSubElemList.item(b),Array(&quot;SpecifiedTradeSettlementHeaderMonetarySummation&quot;,&quot;TaxBasisTotalAmount&quot;)) &apos;[BT-109]
								.sTaxTotalAmount=getValue(oSubElemList.item(b),Array(&quot;SpecifiedTradeSettlementHeaderMonetarySummation&quot;,&quot;TaxTotalAmount&quot;)) &apos;[BT-110] [BT-111]
								.sTaxInclusiveAmount=getValue(oSubElemList.item(b),Array(&quot;SpecifiedTradeSettlementHeaderMonetarySummation&quot;,&quot;GrandTotalAmount&quot;)) &apos;[BT-112]
								.sPrepaidAmount=getValue(oSubElemList.item(b),Array(&quot;SpecifiedTradeSettlementHeaderMonetarySummation&quot;,&quot;TotalPrepaidAmount&quot;)) &apos;[BT-113]
								.sPayableAmount=getValue(oSubElemList.item(b),Array(&quot;SpecifiedTradeSettlementHeaderMonetarySummation&quot;,&quot;DuePayableAmount&quot;)) &apos;[BT-115]
								.sPayableRoundingAmount=getValue(oSubElemList.item(b),Array(&quot;SpecifiedTradeSettlementHeaderMonetarySummation&quot;,&quot;RoundingAmount&quot;)) &apos;[BT-114]
								oSubSubElemList=oSubElemList.item(b).getElementsByTagName(&quot;InvoiceReferencedDocument&quot;)
								For e = 0 To oSubSubElemList.getLength() - 1
									ReDim Preserve arrBillingReference(e,2)
									arrBillingReference(e,BILLING_REFERENCE_ID)=getValue(oSubSubElemList.item(e),Array(&quot;IssuerAssignedID&quot;)) &apos;[BT-25]
									arrBillingReference(e,BILLING_REFERENCE_ISSUE_DATE)=getValue(oSubSubElemList.item(e),Array(&quot;FormattedIssueDateTime&quot;,&quot;DateTimeString&quot;)) &apos;[BT-26]
								Next
						End Select
					Next
			End Select
		Next
	End With
	CreateSheet
End Sub

Function getInvoiceLines(oEntry As Object, arrInvoiceLines) As Variant
	Dim a%, b%, c%, i%, oElement As Object
	Dim iNumberSubInvoiceLines As Integer, iLevel As Integer, sParentID As String
	Dim arrInvoiceLineIDs() As String
	
On Error Goto Catch	
	
	If Not IsArray(arrInvoiceLines) Then 
		ReDim arrInvoiceLines(0,13)
	Else
		ReDim Preserve arrInvoiceLines(UBound(arrInvoiceLines)+1,13)
	End If
	
	a=UBound(arrInvoiceLines)
	arrInvoiceLines(a,INVOICE_LINE_LEVEL)=0
	arrInvoiceLines(a,INVOICE_LINE_ID)=getValue(oEntry,Array(&quot;ID&quot;)) &apos;[BT-126]
	arrInvoiceLines(a,INVOICE_LINE_NOTE)=getValue(oEntry,Array(&quot;Note&quot;)) &apos;[BT-127]
	arrInvoiceLines(a,INVOICED_QUANTITY)=getValue(oEntry,Array(&quot;InvoicedQuantity&quot;)) &apos;[BT-129]
	arrInvoiceLines(a,QUANTITY_UNIT_CODE)=getValue(oEntry,Array(&quot;InvoicedQuantity&quot;),&quot;unitCode&quot;,&quot;&quot;,True) &apos;[BT-130]
	arrInvoiceLines(a,INVOICE_LINE_EXTENSION_AMOUNT)=getValue(oEntry,Array(&quot;LineExtensionAmount&quot;)) &apos;[BT-131]
	arrInvoiceLines(a,INVOICE_LINE_ITEM_DESCRIPTION)=getValue(oEntry,Array(&quot;Item&quot;,&quot;Description&quot;)) &apos;[BT-154]
	arrInvoiceLines(a,INVOICE_LINE_ITEM_NAME)=getValue(oEntry,Array(&quot;Item&quot;,&quot;Name&quot;)) &apos;[BT-153]
	arrInvoiceLines(a,INVOICE_LINE_ITEM_BUYERS_IDENTIFICATION_ID)=getValue(oEntry,Array(&quot;Item&quot;,&quot;BuyersItemIdentification&quot;,&quot;ID&quot;)) &apos;[BT-156]
	arrInvoiceLines(a,INVOICE_LINE_ITEM_SELLER_IDENTIFICATION_ID)=getValue(oEntry,Array(&quot;Item&quot;,&quot;SellersItemIdentification&quot;,&quot;ID&quot;)) &apos;[BT-155]
	arrInvoiceLines(a,TAX_CATEGORY_ID)=getValue(oEntry,Array(&quot;Item&quot;,&quot;ClassifiedTaxCategory&quot;,&quot;ID&quot;)) &apos;[BT-151]
	arrInvoiceLines(a,TAX_PERCENT)=getValue(oEntry,Array(&quot;Item&quot;,&quot;ClassifiedTaxCategory&quot;,&quot;Percent&quot;)) &apos;[BT-152]
	arrInvoiceLines(a,INVOICE_LINE_PRICE_AMOUNT)=getValue(oEntry,Array(&quot;Price&quot;,&quot;PriceAmount&quot;)) &apos;[BT-146]

	sParentID=arrInvoiceLines(a,INVOICE_LINE_ID)
	
	iNumberSubInvoiceLines=oEntry.getElementsByTagName(&quot;SubInvoiceLine&quot;).getLength
	
	If iNumberSubInvoiceLines &gt; 0 Then
		ReDim arrInvoiceLineIDs(iNumberSubInvoiceLines)
		ReDim Preserve arrInvoiceLines(UBound(arrInvoiceLines)+iNumberSubInvoiceLines,13)

		oElement=oEntry

		For i = (a+1) To iNumberSubInvoiceLines + a - 1
			Do While True
				For b = 0 To oElement.getChildNodes.getLength - 1
					If oElement.getChildNodes.item(b).NodeName = &quot;SubInvoiceLine&quot; Then
						For c = 0 To oElement.getChildNodes.item(b).getChildNodes.getLength - 1
							If oElement.getChildNodes.item(b).getChildNodes.item(c).NodeName = &quot;ID&quot; Then
								If Not bFieldInArray(arrInvoiceLineIDs,oElement.getChildNodes.item(b).getChildNodes.item(c).FirstChild.NodeValue) Then
									iLevel=iLevel+1
									sParentID=getValue(oElement,Array(&quot;ID&quot;))
									oElement=oElement.getChildNodes.item(b)
									Exit Do
								End If
							End If 
						Next
					End If
				Next
				iLevel=iLevel-1
				oElement=oElement.getParentNode
				sParentID=getValue(oElement,Array(&quot;ID&quot;))
			Loop 
			arrInvoiceLines(i,INVOICE_LINE_LEVEL)=iLevel
			arrInvoiceLines(i,PARENT_INVOICE_LINE_ID)=sParentID
			arrInvoiceLines(i,INVOICE_LINE_ID)=getValue(oElement,Array(&quot;ID&quot;)) &apos;[BT-126]
			arrInvoiceLines(i,INVOICED_QUANTITY)=getValue(oElement,Array(&quot;InvoicedQuantity&quot;)) &apos;[BT-129]
			arrInvoiceLines(i,QUANTITY_UNIT_CODE)=getValue(oElement,Array(&quot;InvoicedQuantity&quot;),&quot;unitCode&quot;,&quot;&quot;,True) &apos;[BT-130]
			arrInvoiceLines(i,INVOICE_LINE_EXTENSION_AMOUNT)=getValue(oElement,Array(&quot;LineExtensionAmount&quot;)) &apos;[BT-131]
			arrInvoiceLines(i,INVOICE_LINE_ITEM_DESCRIPTION)=getValue(oElement,Array(&quot;Item&quot;,&quot;Description&quot;)) &apos;[BT-154]
			arrInvoiceLines(i,INVOICE_LINE_ITEM_NAME)=getValue(oElement,Array(&quot;Item&quot;,&quot;Name&quot;)) &apos;[BT-153]
			arrInvoiceLines(i,INVOICE_LINE_ITEM_BUYERS_IDENTIFICATION_ID)=getValue(oElement,Array(&quot;Item&quot;,&quot;BuyersItemIdentification&quot;,&quot;ID&quot;)) &apos;[BT-156]
			arrInvoiceLines(i,INVOICE_LINE_ITEM_SELLER_IDENTIFICATION_ID)=getValue(oElement,Array(&quot;Item&quot;,&quot;SellersItemIdentification&quot;,&quot;ID&quot;)) &apos;[BT-155]
			arrInvoiceLines(i,TAX_CATEGORY_ID)=getValue(oElement,Array(&quot;Item&quot;,&quot;ClassifiedTaxCategory&quot;,&quot;ID&quot;)) &apos;[BT-151]
			arrInvoiceLines(i,TAX_PERCENT)=getValue(oElement,Array(&quot;Item&quot;,&quot;ClassifiedTaxCategory&quot;,&quot;Percent&quot;)) &apos;[BT-152]
			arrInvoiceLines(i,INVOICE_LINE_PRICE_AMOUNT)=getValue(oElement,Array(&quot;Price&quot;,&quot;PriceAmount&quot;)) &apos;[BT-146]	
			arrInvoiceLineIDs(i-a-1)=arrInvoiceLines(i,INVOICE_LINE_ID)
		Next
	End If 
	getInvoiceLines=arrInvoiceLines
	Exit Function
	
Catch:
	MsgBox &quot;Fehler beim Import der XML-Daten &quot; &amp; Chr$(10) &amp; Chr$(10) &amp; Error$ &amp; &quot; &quot; &amp; Chr$(10) &amp; &quot; &quot;, 16, &quot;XML-Import&quot;	
End Function

Function bFieldInArray(arrArray(), sEntry as String) As Boolean
	Dim i%
	For i = LBound(arrArray()) to UBound(arrArray())
		If arrArray(i) = sEntry Then
			bFieldInArray = True
			Exit Function
		End if
	Next
	bFieldInArray = False
End Function

REM Function getValue #####################################################################################################################################
REM Parameter:
REM oEntry Element, welches untersucht werden soll
REM arrNodePath() ein Array mit Elementen die rekursiv durchlaufen werden sollen, aus dem letzten Eintrag im Array wird der Wert gelesen, es muss die Reihenfolge beachtet werden,
REM sAttributName Der Name das Atrributes, welches untersucht oder ausgegeben werden soll
REM sAttribut der Wert des letzten Elements wird nur ausgelesen, wenn dessen Attribut dem Parameter entspricht 
REM bGetAttribut Wenn True wird Atrribut.NodeValue ausgegeben, Wenn False wird nur verglichen ob das Attribunt mit dem Parameter übereinstimmt und dann NodeValue vom Element ausgegeben
Function getValue(oEntry As Object, arrNodePath(), Optional sAttributName As String, Optional sAttribut As String, Optional bGetAttribut As Boolean) As String
	Dim a%, oElement As Object
	If IsMissing(bGetAttribut) Then bGetAttribut=False
	oElement=oEntry
	For a = 0 To UBound(arrNodePath())
		If oElement.getElementsByTagName(arrNodePath(a)).getLength &gt; 0 And a &lt; UBound(arrNodePath()) Then
			If oElement.getElementsByTagName(arrNodePath(a)).item(0).NodeName = arrNodePath(a) Then
				oElement=oElement.getElementsByTagName(arrNodePath(a)).item(0)
			End If
		ElseIf oElement.getElementsByTagName(arrNodePath(a)).getLength &gt; 0 And a = UBound(arrNodePath()) Then
			If oElement.getElementsByTagName(arrNodePath(a)).item(0).NodeName = arrNodePath(a) Then
				If Not IsMissing(sAttributName) Then
					If oElement.getElementsByTagName(arrNodePath(a)).item(0).Attributes.getLength &gt; 0 Then
						If oElement.getElementsByTagName(arrNodePath(a)).item(0).Attributes.item(0).NodeName = sAttributName Then
							If bGetAttribut Then
								getValue=oElement.getElementsByTagName(arrNodePath(a)).item(0).Attributes.item(0).NodeValue
							Else
								If oElement.getElementsByTagName(arrNodePath(a)).item(0).Attributes.item(0).NodeValue = sAttribut Then
									getValue=oElement.getElementsByTagName(arrNodePath(a)).item(0).FirstChild.NodeValue
								Else
									getValue=&quot;&quot;
								End If
							End If
						Else
							getValue=&quot;&quot;
						End If
					Else
						getValue=&quot;&quot;
					End If
					Exit Function
				Else
					getValue=oElement.getElementsByTagName(arrNodePath(a)).item(0).FirstChild.NodeValue
					Exit Function
				End If
			End If
		Else
			getValue=&quot;&quot;
			Exit Function
		End If
	Next
End Function

Sub PrintValues
	Dim bDebug As Boolean
	Dim a% , b% , c% , d% , e% , f% , g% , h% , i% , j% , k% , l%, x%
	
	bDebug = True
&apos;	bDebug = False

	With Invoice
		If bDebug Then MsgBox &quot;ID: &quot; &amp; .sInvoiceID &amp; Chr$(10) &amp;_
			&quot;IssueDate: &quot; &amp; .sIssueDate &amp; Chr$(10) &amp;_
			&quot;DueDate: &quot; &amp; .sDueDate &amp; Chr$(10) &amp;_
			&quot;InvoiceTypeCode: &quot; &amp; .sInvoiceTypCode

		If IsArray(arrInvoiceNote) Then
			For f = 0 To UBound(arrInvoiceNote())
				If bDebug Then MsgBox  f+1 &amp; &quot;. Note --&gt;&quot; &amp; Chr$(10) &amp; arrInvoiceNote(f)
			Next
		End If
		
		If bDebug Then MsgBox &quot;DocumentCurrencyCode: &quot; &amp; .sDocumentCurrencyCode
		If bDebug Then MsgBox &quot;BuyerReference: &quot; &amp; .sBuyerReference

		If IsArray(arrBillingReference) Then
			For g = 0 To UBound(arrBillingReference())
				If bDebug Then MsgBox g+1 &amp; &quot;. ID: &quot; &amp; arrBillingReference(g,BILLING_REFERENCE_ID) &amp; &quot; IssueDate: &quot; &amp; arrBillingReference(g,BILLING_REFERENCE_ISSUE_DATE)
			Next
		End If
		
		If bDebug Then MsgBox &quot;Supplier Party --&gt;&quot; &amp;Chr$(10) &amp; .sSellerName &amp; Chr$(10) &amp; .sSellerStreetName &amp; Chr$(10) &amp;_
				 .sSellerCountryCode &amp; &quot; &quot; &amp; .sSellerPLZ &amp; &quot; &quot; &amp; .sSellerCityName &amp; Chr$(10) &amp; .sSellerEMail
		If bDebug Then MsgBox  &quot;SupplierTaxCompanyID: &quot; &amp; .sSellerTaxCompanyID
		If bDebug Then MsgBox &quot;Supplier Contact --&gt;&quot; &amp; Chr$(10) &amp; .sSellerContactName &amp; Chr$(10) &amp;_
											&quot;Telephone: &quot; &amp; .sSellerContactTelephone &amp; Chr$(10) &amp;_
											&quot;ElectronicMail: &quot; &amp; .sSellerContactElectronicMail
		If bDebug Then MsgBox  &quot;ActualDeliveryDate: &quot; &amp; .sActualDeliveryDate
		If bDebug Then MsgBox  &quot;PaymentMeans --&gt;&quot; &amp; Chr$(10) &amp;_
											&quot;PaymentMeansCode: &quot; &amp; .sPaymentMeansCode &amp; Chr$(10) &amp;_
											&quot;IBAN: &quot; &amp; .sPayeeFinancialAccountID &amp; Chr$(10) &amp;_
											&quot;AccountName: &quot; &amp; .sPayeeFinancialAccountName &amp; Chr$(10) &amp;_
											&quot;BIC: &quot; &amp; .sPayeeFinancialInstitutionBranchID
		If bDebug Then MsgBox  &quot;PaymentTerms:&quot; &amp; Chr$(10) &amp; .sPaymentTerms
		
		If IsArray(arrAllowanceCharge) Then 
			For h = 0 To UBound(arrAllowanceCharge())
				If bDebug Then MsgBox h+1 &amp; &quot;. AllowanceCharge --&gt;&quot; &amp; Chr$(10) &amp;_
					&quot;ChargeIndicator: &quot; &amp; arrAllowanceCharge(h,CHARGE_INDICATOR) &amp; Chr$(10) &amp;_
					&quot;AllowanceChargeReasonCode: &quot; &amp; arrAllowanceCharge(h,ALLOWANCE_CHARGE_REASON_CODE) &amp; Chr$(10) &amp;_
					&quot;AllowanceChargeReason: &quot; &amp; arrAllowanceCharge(h,ALLOWANCE_CHARGE_REASON) &amp; Chr$(10) &amp;_
					&quot;MultiplierFactorNumeric: &quot; &amp; arrAllowanceCharge(h,MULTIPLIER_FACTOR_NUMERIC) &amp; Chr$(10) &amp;_
					&quot;Amount: &quot; &amp; arrAllowanceCharge(h,AMOUNT) &amp; Chr$(10) &amp;_
					&quot;BaseAmount: &quot; &amp; arrAllowanceCharge(h,BASE_AMOUNT) &amp; Chr$(10) &amp;_
					&quot;TaxCategoryID: &quot; &amp; arrAllowanceCharge(h,TAX_CATEGORY_ID) &amp; Chr$(10) &amp;_
					&quot;TaxCategoryPercent: &quot; &amp; arrAllowanceCharge(h,TAX_PERCENT) 
			Next
		End If
		
		If bDebug Then MsgBox &quot;TaxTotalAmount: &quot; &amp; .sTaxTotalAmount
		
		For i = 0 To UBound(arrTaxSubtotal())
			If bDebug Then MsgBox i+1 &amp; &quot;. TaxSubtotal --&gt;&quot; &amp; Chr$(10) &amp;_
				&quot;TaxableAmount: &quot; &amp; arrTaxSubtotal(i,TAXABLE_AMOUNT) &amp; Chr$(10) &amp;_
				&quot;TaxAmount: &quot; &amp; arrTaxSubtotal(i,TAX_AMOUNT) &amp; Chr$(10) &amp;_
				&quot;TaxCategoryID: &quot; &amp; arrTaxSubtotal(i,TAX_CATEGORY_ID) &amp; Chr$(10) &amp;_
				&quot;TaxPercent: &quot; &amp; arrTaxSubtotal(i,TAX_PERCENT) &amp; Chr$(10) &amp;_
				&quot;TaxExemptionReason: &quot; &amp; arrTaxSubtotal(i,TAX_EXEMPTION_REASON)
		Next
		
		If bDebug Then MsgBox &quot;LegalMonetaryTotal --&gt;&quot; &amp; Chr$(10) &amp;_
			&quot;LineExtensionAmount: &quot; &amp; .sLineExtensionAmount &amp; Chr$(10) &amp;_
			&quot;TaxExclusiveAmount: &quot; &amp; .sTaxExclusiveAmount &amp; Chr$(10) &amp;_
			&quot;TaxInclusiveAmount: &quot; &amp; .sTaxInclusiveAmount &amp; Chr$(10) &amp;_
			&quot;AllowanceTotalAmount: &quot; &amp; .sAllowanceTotalAmount &amp; Chr$(10) &amp;_
			&quot;PrepaidAmount: &quot; &amp; .sPrepaidAmount &amp; Chr$(10) &amp;_
			&quot;PayableRoundingAmount: &quot; &amp; .sPayableRoundingAmount &amp; Chr$(10) &amp;_
			&quot;PayableAmount: &quot; &amp; .sPayableAmount

		For j = 0 To UBound(arrInvoiceLines())
			If bDebug Then MsgBox(j+1 &amp; &quot;. InvoiceLine --&gt;&quot; &amp; Chr$(10) &amp;_
				&quot;Level: &quot; &amp; arrInvoiceLines(j,INVOICE_LINE_LEVEL) &amp; Chr$(10) &amp;_
				&quot;Parent ID: &quot; &amp; arrInvoiceLines(j,PARENT_INVOICE_LINE_ID) &amp; Chr$(10) &amp;_
				&quot;ID: &quot; &amp; arrInvoiceLines(j,INVOICE_LINE_ID) &amp; Chr$(10) &amp;_
				&quot;Note: &quot; &amp; arrInvoiceLines(j,INVOICE_LINE_NOTE) &amp; Chr$(10) &amp;_
				&quot;Quantity: &quot; &amp; arrInvoiceLines(j,INVOICED_QUANTITY) &amp; Chr$(10) &amp;_
				&quot;UnitCode: &quot; &amp; arrInvoiceLines(j,QUANTITY_UNIT_CODE) &amp; Chr$(10) &amp;_
				&quot;ExtensionAmount: &quot; &amp; arrInvoiceLines(j,INVOICE_LINE_EXTENSION_AMOUNT) &amp; Chr$(10) &amp;_
				&quot;Description: &quot; &amp; arrInvoiceLines(j,INVOICE_LINE_ITEM_DESCRIPTION) &amp; Chr$(10) &amp;_
				&quot;Name: &quot; &amp; arrInvoiceLines(j,INVOICE_LINE_ITEM_NAME) &amp; Chr$(10) &amp;_
				&quot;Buyer IdentID: &quot; &amp; arrInvoiceLines(j,INVOICE_LINE_ITEM_BUYERS_IDENTIFICATION_ID) &amp; Chr$(10) &amp;_
				&quot;Sellers IdentID: &quot; &amp; arrInvoiceLines(j,INVOICE_LINE_ITEM_SELLER_IDENTIFICATION_ID) &amp; Chr$(10) &amp;_
				&quot;TaxCategory: &quot; &amp; arrInvoiceLines(j,TAX_CATEGORY_ID) &amp; Chr$(10) &amp;_
				&quot;TaxPercent: &quot; &amp; arrInvoiceLines(j,TAX_PERCENT) &amp; Chr$(10) &amp;_
				&quot;PriceAmount: &quot; &amp; arrInvoiceLines(j,INVOICE_LINE_PRICE_AMOUNT))
		Next
	End With 
End Sub

Sub CreateSheet
	Dim oCalcDoc As Object, oSheet As Object, oPathSettings As Object
	Dim iRow As Integer
	oPathSettings = CreateUnoService(&quot;com.sun.star.util.PathSettings&quot;)
	oCalcDoc = StarDesktop.loadComponentFromURL(&quot;private:factory/scalc&quot;, &quot;_blank&quot;, 0, Array())
	oSheet = oCalcDoc.Sheets(0)  
	
	Dim a% , b% , c% , d% , e% , f% , g% , h% , i% , j% , k% , l%, x%
 	With Invoice
		
		iRow=1
		fillSheet(oSheet,&quot;A&quot; &amp; iRow,&quot;Invoice ID&quot;,True)
		fillSheet(oSheet,&quot;B&quot; &amp; iRow,&quot;IssueDate&quot;,True)
		fillSheet(oSheet,&quot;C&quot; &amp; iRow,&quot;DueDate&quot;,True)
		fillSheet(oSheet,&quot;D&quot; &amp; iRow,&quot;ActualDeliveryDate&quot;,True)
		fillSheet(oSheet,&quot;E&quot; &amp; iRow,&quot;InvoiceTypeCode&quot;,True)
		fillSheet(oSheet,&quot;F&quot; &amp; iRow,&quot;DocumentCurrencyCode&quot;,True)
		fillSheet(oSheet,&quot;G&quot; &amp; iRow,&quot;BuyerReference&quot;,True)
		iRow=iRow+1
		fillSheet(oSheet,&quot;A&quot; &amp; iRow,.sInvoiceID,False)
		fillSheet(oSheet,&quot;B&quot; &amp; iRow,.sIssueDate,False)
		fillSheet(oSheet,&quot;C&quot; &amp; iRow,.sDueDate,False)
		fillSheet(oSheet,&quot;D&quot; &amp; iRow,.sActualDeliveryDate,False)
		fillSheet(oSheet,&quot;E&quot; &amp; iRow,.sInvoiceTypCode,False)
		fillSheet(oSheet,&quot;F&quot; &amp; iRow,.sDocumentCurrencyCode,False)
		fillSheet(oSheet,&quot;G&quot; &amp; iRow,.sBuyerReference,False)
		iRow=iRow+1
		
		If IsArray(arrInvoiceNote) Then
			fillSheet(oSheet,&quot;A&quot; &amp; iRow &amp; &quot;:D&quot; &amp; iRow,&quot;Invoice Notes&quot;,True)
			iRow=iRow+1
			For a = 0 To UBound(arrInvoiceNote())
				fillSheet(oSheet,&quot;A&quot; &amp; iRow+a &amp; &quot;:D&quot; &amp; iRow+a,arrInvoiceNote(a),False)				
			Next
			iRow=iRow+a+1
		End If
	
		If IsArray(arrBillingReference) Then
			fillSheet(oSheet,&quot;A&quot; &amp; iRow,&quot;BillingReference ID&quot;,True)
			fillSheet(oSheet,&quot;B&quot; &amp; iRow,&quot;IssueDate&quot;,True)
			iRow=iRow+1
			For b = 0 To UBound(arrBillingReference())
				fillSheet(oSheet,&quot;A&quot; &amp; iRow+b,arrBillingReference(b,BILLING_REFERENCE_ID),False)				
				fillSheet(oSheet,&quot;B&quot; &amp; iRow+b,arrBillingReference(b,BILLING_REFERENCE_ISSUE_DATE),False)				
			Next
			iRow=iRow+b+1
		End If

		fillSheet(oSheet,&quot;A&quot; &amp; iRow,&quot;Seller Party --&gt;&quot;,False)
		iRow=iRow+1
		fillSheet(oSheet,&quot;A&quot; &amp; iRow,&quot;SellerName&quot;,True)
		fillSheet(oSheet,&quot;B&quot; &amp; iRow,&quot;SellerStreetName&quot;,True)
		fillSheet(oSheet,&quot;C&quot; &amp; iRow,&quot;SellerCountryCode&quot;,True)
		fillSheet(oSheet,&quot;D&quot; &amp; iRow,&quot;SellerPLZ&quot;,True)
		fillSheet(oSheet,&quot;E&quot; &amp; iRow,&quot;SellerCityName&quot;,True)
		fillSheet(oSheet,&quot;F&quot; &amp; iRow,&quot;SellerEMail&quot;,True)
		fillSheet(oSheet,&quot;G&quot; &amp; iRow,&quot;Seller TaxCompanyID&quot;,True)
		iRow=iRow+1
		fillSheet(oSheet,&quot;A&quot; &amp; iRow,.sSellerName,False)
		fillSheet(oSheet,&quot;B&quot; &amp; iRow,.sSellerStreetName,False)
		fillSheet(oSheet,&quot;C&quot; &amp; iRow,.sSellerCountryCode,False)
		fillSheet(oSheet,&quot;D&quot; &amp; iRow,.sSellerPLZ,False)
		fillSheet(oSheet,&quot;E&quot; &amp; iRow,.sSellerCityName,False)
		fillSheet(oSheet,&quot;F&quot; &amp; iRow,.sSellerEMail,False)
		fillSheet(oSheet,&quot;G&quot; &amp; iRow,.sSellerTaxCompanyID,False)
		iRow=iRow+2

		fillSheet(oSheet,&quot;A&quot; &amp; iRow,&quot;Seller Contact --&gt;&quot;,False)
		iRow=iRow+1
		fillSheet(oSheet,&quot;A&quot; &amp; iRow,&quot;ContactName&quot;,True)
		fillSheet(oSheet,&quot;B&quot; &amp; iRow,&quot;Telephone&quot;,True)
		fillSheet(oSheet,&quot;C&quot; &amp; iRow,&quot;ElectronicMail&quot;,True)
		iRow=iRow+1
		fillSheet(oSheet,&quot;A&quot; &amp; iRow,.sSellerContactName,False)
		fillSheet(oSheet,&quot;B&quot; &amp; iRow,.sSellerContactTelephone,False)
		fillSheet(oSheet,&quot;C&quot; &amp; iRow,.sSellerContactElectronicMail,False)
		iRow=iRow+2
	
		fillSheet(oSheet,&quot;A&quot; &amp; iRow,&quot;PaymentMeans --&gt;&quot;,False)
		iRow=iRow+1
		fillSheet(oSheet,&quot;A&quot; &amp; iRow,&quot;AccountName&quot;,True)
		fillSheet(oSheet,&quot;B&quot; &amp; iRow,&quot;IBAN&quot;,True)
		fillSheet(oSheet,&quot;C&quot; &amp; iRow,&quot;BIC&quot;,True)
		fillSheet(oSheet,&quot;D&quot; &amp; iRow,&quot;PaymentMeansCode&quot;,True)
		iRow=iRow+1
		fillSheet(oSheet,&quot;A&quot; &amp; iRow,.sPayeeFinancialAccountName,False)
		fillSheet(oSheet,&quot;B&quot; &amp; iRow,.sPayeeFinancialAccountID,False)
		fillSheet(oSheet,&quot;C&quot; &amp; iRow,.sPayeeFinancialInstitutionBranchID,False)
		fillSheet(oSheet,&quot;D&quot; &amp; iRow,.sPaymentMeansCode,False)
		iRow=iRow+2
	
		fillSheet(oSheet,&quot;A&quot; &amp; iRow &amp; &quot;:D&quot; &amp; iRow,&quot;PaymentTerms&quot;,True)
		iRow=iRow+1
		fillSheet(oSheet,&quot;A&quot; &amp; iRow &amp; &quot;:D&quot; &amp; iRow,.sPaymentTerms,False)
		iRow=iRow+2

		If IsArray(arrAllowanceCharge) Then
			fillSheet(oSheet,&quot;A&quot; &amp; iRow,&quot;AllowanceCharge --&gt;&quot;,False)
			iRow=iRow+1
			fillSheet(oSheet,&quot;A&quot; &amp; iRow,&quot;ChargeIndicator&quot;,True)
			fillSheet(oSheet,&quot;B&quot; &amp; iRow,&quot;MultiplierFactorNumeric&quot;,True)
			fillSheet(oSheet,&quot;C&quot; &amp; iRow,&quot;Amount&quot;,True)
			fillSheet(oSheet,&quot;D&quot; &amp; iRow,&quot;BaseAmount&quot;,True)
			fillSheet(oSheet,&quot;E&quot; &amp; iRow,&quot;TaxCategoryID&quot;,True)
			fillSheet(oSheet,&quot;F&quot; &amp; iRow,&quot;TaxCategoryPercent&quot;,True)
			fillSheet(oSheet,&quot;G&quot; &amp; iRow,&quot;AllowanceChargeReasonCode&quot;,True)
			fillSheet(oSheet,&quot;H&quot; &amp; iRow,&quot;AllowanceChargeReason&quot;,True)
			iRow=iRow+1
			For c = 0 To UBound(arrAllowanceCharge())
				fillSheet(oSheet,&quot;A&quot; &amp; iRow+c,arrAllowanceCharge(c,CHARGE_INDICATOR),False)				
				fillSheet(oSheet,&quot;B&quot; &amp; iRow+c,arrAllowanceCharge(c,MULTIPLIER_FACTOR_NUMERIC),False)				
				fillSheet(oSheet,&quot;C&quot; &amp; iRow+c,arrAllowanceCharge(c,AMOUNT),False)				
				fillSheet(oSheet,&quot;D&quot; &amp; iRow+c,arrAllowanceCharge(c,BASE_AMOUNT),False)				
				fillSheet(oSheet,&quot;E&quot; &amp; iRow+c,arrAllowanceCharge(c,TAX_CATEGORY_ID),False)				
				fillSheet(oSheet,&quot;F&quot; &amp; iRow+c,arrAllowanceCharge(c,TAX_PERCENT),False)				
				fillSheet(oSheet,&quot;G&quot; &amp; iRow+c,arrAllowanceCharge(c,ALLOWANCE_CHARGE_REASON_CODE),False)				
				fillSheet(oSheet,&quot;H&quot; &amp; iRow+c,arrAllowanceCharge(c,ALLOWANCE_CHARGE_REASON),False)				
			Next
			iRow=iRow+c+1
		End If

		fillSheet(oSheet,&quot;A&quot; &amp; iRow,&quot;TaxTotalAmount:&quot;,True)
		fillSheet(oSheet,&quot;B&quot; &amp; iRow,.sTaxTotalAmount,False)
		iRow=iRow+2

		If IsArray(arrTaxSubtotal) Then
			fillSheet(oSheet,&quot;A&quot; &amp; iRow,&quot;TaxSubtotal --&gt;&quot;,False)
			iRow=iRow+1
			fillSheet(oSheet,&quot;A&quot; &amp; iRow,&quot;TaxableAmount&quot;,True)
			fillSheet(oSheet,&quot;B&quot; &amp; iRow,&quot;TaxAmount&quot;,True)
			fillSheet(oSheet,&quot;C&quot; &amp; iRow,&quot;TaxCategoryID&quot;,True)
			fillSheet(oSheet,&quot;D&quot; &amp; iRow,&quot;TaxPercent&quot;,True)
			fillSheet(oSheet,&quot;E&quot; &amp; iRow,&quot;&quot;,True)
			fillSheet(oSheet,&quot;F&quot; &amp; iRow,&quot;&quot;,True)
			fillSheet(oSheet,&quot;G&quot; &amp; iRow,&quot;&quot;,True)
			fillSheet(oSheet,&quot;H&quot; &amp; iRow,&quot;TaxExemptionReason&quot;,True)
			iRow=iRow+1
			For d = 0 To UBound(arrTaxSubtotal())
				fillSheet(oSheet,&quot;A&quot; &amp; iRow+d,arrTaxSubtotal(d,TAXABLE_AMOUNT),False)				
				fillSheet(oSheet,&quot;B&quot; &amp; iRow+d,arrTaxSubtotal(d,TAX_AMOUNT),False)				
				fillSheet(oSheet,&quot;C&quot; &amp; iRow+d,arrTaxSubtotal(d,TAX_CATEGORY_ID),False)				
				fillSheet(oSheet,&quot;D&quot; &amp; iRow+d,arrTaxSubtotal(d,TAX_PERCENT),False)				
				fillSheet(oSheet,&quot;H&quot; &amp; iRow+d,arrTaxSubtotal(d,TAX_EXEMPTION_REASON),False)				
			Next
			iRow=iRow+d+1
		End If

		fillSheet(oSheet,&quot;A&quot; &amp; iRow,&quot;LegalMonetaryTotal --&gt;&quot;,False)
		iRow=iRow+1
		fillSheet(oSheet,&quot;A&quot; &amp; iRow,&quot;LineExtensionAmount&quot;,True)
		fillSheet(oSheet,&quot;B&quot; &amp; iRow,&quot;TaxExclusiveAmount&quot;,True)
		fillSheet(oSheet,&quot;C&quot; &amp; iRow,&quot;TaxInclusiveAmount&quot;,True)
		fillSheet(oSheet,&quot;D&quot; &amp; iRow,&quot;AllowanceTotalAmount&quot;,True)
		fillSheet(oSheet,&quot;E&quot; &amp; iRow,&quot;PrepaidAmount&quot;,True)
		fillSheet(oSheet,&quot;F&quot; &amp; iRow,&quot;PayableRoundingAmount&quot;,True)
		fillSheet(oSheet,&quot;G&quot; &amp; iRow,&quot;PayableAmount&quot;,True)
		iRow=iRow+1
		fillSheet(oSheet,&quot;A&quot; &amp; iRow,.sLineExtensionAmount,False)
		fillSheet(oSheet,&quot;B&quot; &amp; iRow,.sTaxExclusiveAmount,False)
		fillSheet(oSheet,&quot;C&quot; &amp; iRow,.sTaxInclusiveAmount,False)
		fillSheet(oSheet,&quot;D&quot; &amp; iRow,.sAllowanceTotalAmount,False)
		fillSheet(oSheet,&quot;E&quot; &amp; iRow,.sPrepaidAmount,False)
		fillSheet(oSheet,&quot;F&quot; &amp; iRow,.sPayableRoundingAmount,False)
		fillSheet(oSheet,&quot;G&quot; &amp; iRow,.sPayableAmount,False)
		iRow=iRow+2

		If IsArray(arrInvoiceLines) Then
			fillSheet(oSheet,&quot;A&quot; &amp; iRow,&quot;InvoiceLine --&gt;&quot;,False)
			iRow=iRow+1
			fillSheet(oSheet,&quot;A&quot; &amp; iRow,&quot;Level&quot;,True)
			fillSheet(oSheet,&quot;B&quot; &amp; iRow,&quot;Parent ID&quot;,True)
			fillSheet(oSheet,&quot;C&quot; &amp; iRow,&quot;InvoiceLine ID&quot;,True)
			fillSheet(oSheet,&quot;D&quot; &amp; iRow,&quot;Quantity&quot;,True)
			fillSheet(oSheet,&quot;E&quot; &amp; iRow,&quot;UnitCode&quot;,True)
			fillSheet(oSheet,&quot;F&quot; &amp; iRow,&quot;Buyer IdentID&quot;,True)
			fillSheet(oSheet,&quot;G&quot; &amp; iRow,&quot;Sellers IdentID&quot;,True)
			fillSheet(oSheet,&quot;H&quot; &amp; iRow,&quot;Name&quot;,True)
			fillSheet(oSheet,&quot;I&quot; &amp; iRow,&quot;TaxCategory&quot;,True)
			fillSheet(oSheet,&quot;J&quot; &amp; iRow,&quot;TaxPercent&quot;,True)
			fillSheet(oSheet,&quot;K&quot; &amp; iRow,&quot;ExtensionAmount&quot; &amp; Chr$(10) &amp; &quot;LineTotalAmount&quot;,True)
			fillSheet(oSheet,&quot;L&quot; &amp; iRow,&quot;PriceAmount&quot; &amp; Chr$(10) &amp; &quot;ChargeAmount&quot;,True)
			fillSheet(oSheet,&quot;M&quot; &amp; iRow,&quot;Description&quot;,True)
			iRow=iRow+1
			For e = 0 To UBound(arrInvoiceLines())
				fillSheet(oSheet,&quot;A&quot; &amp; iRow+e,arrInvoiceLines(e,INVOICE_LINE_LEVEL),False)				
				fillSheet(oSheet,&quot;B&quot; &amp; iRow+e,arrInvoiceLines(e,PARENT_INVOICE_LINE_ID),False)				
				fillSheet(oSheet,&quot;C&quot; &amp; iRow+e,arrInvoiceLines(e,INVOICE_LINE_ID),False)				
				fillSheet(oSheet,&quot;D&quot; &amp; iRow+e,arrInvoiceLines(e,INVOICED_QUANTITY),False)				
				fillSheet(oSheet,&quot;E&quot; &amp; iRow+e,arrInvoiceLines(e,QUANTITY_UNIT_CODE),False)				
				fillSheet(oSheet,&quot;F&quot; &amp; iRow+e,arrInvoiceLines(e,INVOICE_LINE_ITEM_BUYERS_IDENTIFICATION_ID),False)				
				fillSheet(oSheet,&quot;G&quot; &amp; iRow+e,arrInvoiceLines(e,INVOICE_LINE_ITEM_SELLER_IDENTIFICATION_ID),False)				
				fillSheet(oSheet,&quot;H&quot; &amp; iRow+e,arrInvoiceLines(e,INVOICE_LINE_ITEM_NAME),False)				
				fillSheet(oSheet,&quot;I&quot; &amp; iRow+e,arrInvoiceLines(e,TAX_CATEGORY_ID),False)				
				fillSheet(oSheet,&quot;J&quot; &amp; iRow+e,arrInvoiceLines(e,TAX_PERCENT),False)				
				fillSheet(oSheet,&quot;K&quot; &amp; iRow+e,arrInvoiceLines(e,INVOICE_LINE_EXTENSION_AMOUNT),False)				
				fillSheet(oSheet,&quot;L&quot; &amp; iRow+e,arrInvoiceLines(e,INVOICE_LINE_PRICE_AMOUNT),False)				
				fillSheet(oSheet,&quot;M&quot; &amp; iRow+e,arrInvoiceLines(e,INVOICE_LINE_ITEM_DESCRIPTION),False)				
			Next
			iRow=iRow+e+1
		End If
		
 	End With
 	oSheet.getColumns().OptimalWidth = True
 	oSheet.getRows().OptimalHeight = True
End Sub

Sub fillSheet(oSheet, sRange As String, sValue As String, bHeadLine As Boolean)
	Dim oBorder As Object, oCell As Object, oRange As Object
	Dim bLO As Boolean
	
	oBorder = CreateUnoStruct(&quot;com.sun.star.table.BorderLine2&quot;)
	bLO = True
	
	If IsNull(oBorder) Then
		bLO = False
		oBorder = CreateUnoStruct(&quot;com.sun.star.table.BorderLine&quot;)
	End If

	oBorder.OuterLineWidth = 40
	If InStr(sRange,&quot;:&quot;) &gt; 0 Then
		oRange=oSheet.getCellRangeByName(sRange)
		oRange.merge(True)
		oCell=oSheet.getCellRangeByName(Split(sRange,&quot;:&quot;)(0))
	Else
		oCell=oSheet.getCellRangeByName(sRange)
	End If
	If bHeadLine Then
		If bLO Then
			oBorder.LineStyle = com.sun.star.table.BorderLineStyle.SOLID
			oBorder.LineWidth = 40
			oCell.BottomBorder2 = oBorder
		Else
			oCell.BottomBorder = oBorder
		End If
	End If
	oCell.VertJustify = com.sun.star.table.CellVertJustify.TOP
	oCell.String = sValue
End Sub


</script:module>